/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.music;

/**
* <h1>Main-Player</h1>
* This program brings us a music player with a built-in login system 
* <p>
* @author  Austin Liu
* @version 19
* @since   2023-01-23
  **/

//imports for swing and sound
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
public class Player extends javax.swing.JFrame {

    /**
     * Creates new form Player
     */
    public Player() {
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    //all the gui stuff I did or netbeans did for me
    //I recently found out that having many frames is very inefficient and is a bad practice
    //so I researched card layouts which switches from panel to panel instead of opening another frame, covering the other one 
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        WelcomePage = new javax.swing.JPanel();
        Message = new javax.swing.JLabel();
        Adin = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        Logo2 = new javax.swing.JLabel();
        Login = new javax.swing.JButton();
        Register = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        LoginPage = new javax.swing.JPanel();
        MessageL = new javax.swing.JLabel();
        LogoL = new javax.swing.JLabel();
        LoginPasswordField = new javax.swing.JPasswordField();
        LoginUserField = new javax.swing.JTextField();
        LoginL = new javax.swing.JButton();
        UserL = new javax.swing.JLabel();
        PasswordL = new javax.swing.JLabel();
        AdinL = new javax.swing.JLabel();
        BackL = new javax.swing.JButton();
        messageLabel = new javax.swing.JLabel();
        RegisterPage = new javax.swing.JPanel();
        MessageR = new javax.swing.JLabel();
        LogoR = new javax.swing.JLabel();
        UserR = new javax.swing.JLabel();
        PasswordR = new javax.swing.JLabel();
        RegisterUsername = new javax.swing.JTextField();
        RegisterPassword = new javax.swing.JPasswordField();
        Terms = new javax.swing.JCheckBox();
        RegisterR = new javax.swing.JButton();
        BackR = new javax.swing.JButton();
        MessageLabelR = new javax.swing.JLabel();
        DeletePage = new javax.swing.JPanel();
        UserD = new javax.swing.JLabel();
        LogoD = new javax.swing.JLabel();
        MessageD = new javax.swing.JLabel();
        DeletePassword = new javax.swing.JPasswordField();
        PasswordD = new javax.swing.JLabel();
        DeleteUserD = new javax.swing.JTextField();
        MonkeyD = new javax.swing.JLabel();
        DeleteD = new javax.swing.JButton();
        BackD = new javax.swing.JButton();
        Music = new javax.swing.JPanel();
        MusicPanel = new javax.swing.JPanel();
        MessageM = new javax.swing.JLabel();
        Select = new javax.swing.JButton();
        Play = new javax.swing.JButton();
        Pause = new javax.swing.JButton();
        Resume = new javax.swing.JButton();
        sliderTime = new javax.swing.JSlider();
        Duration = new javax.swing.JLabel();
        TimeCounter = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(1, 1, 500, 500));

        MainPanel.setLayout(new java.awt.CardLayout());

        Message.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Message.setText("Welcome back to Spotfity please do one of the following to continue");

        Adin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/music/andrew tatee.png"))); // NOI18N

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/music/spotify logo (1).png"))); // NOI18N

        Logo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/music/spotifyd-removebg-preview (1) (1).png"))); // NOI18N

        Login.setText("Login");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });

        Register.setText("Register");
        Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout WelcomePageLayout = new javax.swing.GroupLayout(WelcomePage);
        WelcomePage.setLayout(WelcomePageLayout);
        WelcomePageLayout.setHorizontalGroup(
            WelcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WelcomePageLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(Adin)
                .addGroup(WelcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WelcomePageLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(Message))
                    .addGroup(WelcomePageLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(Login)
                        .addGap(39, 39, 39)
                        .addComponent(Register))
                    .addGroup(WelcomePageLayout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(Delete)))
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WelcomePageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(WelcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WelcomePageLayout.createSequentialGroup()
                        .addComponent(Logo)
                        .addGap(241, 241, 241))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WelcomePageLayout.createSequentialGroup()
                        .addComponent(Logo2)
                        .addGap(221, 221, 221))))
        );
        WelcomePageLayout.setVerticalGroup(
            WelcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WelcomePageLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(Logo)
                .addGap(18, 18, 18)
                .addGroup(WelcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WelcomePageLayout.createSequentialGroup()
                        .addComponent(Message)
                        .addGap(28, 28, 28)
                        .addGroup(WelcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Login)
                            .addComponent(Register))
                        .addGap(18, 18, 18)
                        .addComponent(Delete))
                    .addComponent(Adin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addComponent(Logo2)
                .addGap(82, 82, 82))
        );

        MainPanel.add(WelcomePage, "card5");

        MessageL.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MessageL.setText("Welcome back, Please enter the following details to continue");

        LogoL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/music/spotify logo (1).png"))); // NOI18N

        LoginL.setText("Login");
        LoginL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginLActionPerformed(evt);
            }
        });

        UserL.setText("User");

        PasswordL.setText("Password");

        AdinL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/music/andrew tatee.png"))); // NOI18N

        BackL.setText("Back");
        BackL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackLActionPerformed(evt);
            }
        });

        messageLabel.setText(" ");

        javax.swing.GroupLayout LoginPageLayout = new javax.swing.GroupLayout(LoginPage);
        LoginPage.setLayout(LoginPageLayout);
        LoginPageLayout.setHorizontalGroup(
            LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LoginPageLayout.createSequentialGroup()
                        .addGap(0, 124, Short.MAX_VALUE)
                        .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPageLayout.createSequentialGroup()
                                .addComponent(MessageL)
                                .addGap(118, 118, 118))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPageLayout.createSequentialGroup()
                                .addComponent(LogoL)
                                .addGap(253, 253, 253))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPageLayout.createSequentialGroup()
                        .addComponent(AdinL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UserL)
                            .addComponent(PasswordL))
                        .addGap(18, 18, 18)
                        .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LoginL)
                            .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(LoginUserField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(LoginPasswordField)))
                        .addGap(206, 206, 206))))
            .addGroup(LoginPageLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(BackL)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        LoginPageLayout.setVerticalGroup(
            LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackL)
                .addGap(4, 4, 4)
                .addComponent(LogoL)
                .addGap(34, 34, 34)
                .addComponent(MessageL)
                .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LoginPageLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LoginUserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UserL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(LoginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LoginPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PasswordL))
                        .addGap(8, 8, 8)
                        .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LoginL))
                    .addGroup(LoginPageLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AdinL)))
                .addContainerGap(209, Short.MAX_VALUE))
        );

        MainPanel.add(LoginPage, "card2");

        MessageR.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MessageR.setText("Welcome! Please enter the following to enter");

        LogoR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/music/spotifyd-removebg-preview (1) (1).png"))); // NOI18N

        UserR.setText("User");

        PasswordR.setText("Password");

        RegisterUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterUsernameActionPerformed(evt);
            }
        });

        RegisterPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterPasswordActionPerformed(evt);
            }
        });

        Terms.setText("You agree that we should spam your email");
        Terms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TermsActionPerformed(evt);
            }
        });

        RegisterR.setText("Register");
        RegisterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterRActionPerformed(evt);
            }
        });

        BackR.setText("Back");
        BackR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackRActionPerformed(evt);
            }
        });

        MessageLabelR.setText(" ");

        javax.swing.GroupLayout RegisterPageLayout = new javax.swing.GroupLayout(RegisterPage);
        RegisterPage.setLayout(RegisterPageLayout);
        RegisterPageLayout.setHorizontalGroup(
            RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterPageLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterPageLayout.createSequentialGroup()
                        .addComponent(MessageR)
                        .addGap(158, 158, 158))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterPageLayout.createSequentialGroup()
                        .addComponent(BackR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                        .addComponent(LogoR)
                        .addGap(237, 237, 237))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterPageLayout.createSequentialGroup()
                        .addGroup(RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PasswordR)
                            .addComponent(UserR))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegisterUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegisterR)
                            .addComponent(Terms, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegisterPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MessageLabelR, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(0, 30, Short.MAX_VALUE))
        );
        RegisterPageLayout.setVerticalGroup(
            RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterPageLayout.createSequentialGroup()
                .addGroup(RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RegisterPageLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(LogoR))
                    .addGroup(RegisterPageLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BackR)))
                .addGap(34, 34, 34)
                .addComponent(MessageR)
                .addGap(40, 40, 40)
                .addGroup(RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserR)
                    .addComponent(RegisterUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordR)
                    .addComponent(RegisterPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Terms, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegisterR)
                .addGap(27, 27, 27)
                .addComponent(MessageLabelR)
                .addContainerGap(229, Short.MAX_VALUE))
        );

        MainPanel.add(RegisterPage, "card3");

        UserD.setText("Username");

        LogoD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/music/spotify logo (1).png"))); // NOI18N

        MessageD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MessageD.setText("Sorry to see you go! Please fill out the following info");

        DeletePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletePasswordActionPerformed(evt);
            }
        });

        PasswordD.setText("Password");

        MonkeyD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/music/monkey (1).jpg"))); // NOI18N

        DeleteD.setText("Delete Account");

        BackD.setText("Back");
        BackD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DeletePageLayout = new javax.swing.GroupLayout(DeletePage);
        DeletePage.setLayout(DeletePageLayout);
        DeletePageLayout.setHorizontalGroup(
            DeletePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeletePageLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(DeletePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LogoD)
                    .addComponent(UserD)
                    .addComponent(PasswordD))
                .addGap(34, 34, 34)
                .addGroup(DeletePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DeletePageLayout.createSequentialGroup()
                        .addComponent(DeleteD)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(DeletePageLayout.createSequentialGroup()
                        .addGroup(DeletePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DeletePageLayout.createSequentialGroup()
                                .addComponent(MessageD, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(MonkeyD))
                            .addGroup(DeletePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(DeletePassword)
                                .addComponent(DeleteUserD, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(DeletePageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackD)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        DeletePageLayout.setVerticalGroup(
            DeletePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeletePageLayout.createSequentialGroup()
                .addGroup(DeletePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DeletePageLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(BackD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LogoD))
                    .addGroup(DeletePageLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(DeletePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MessageD)
                            .addGroup(DeletePageLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(MonkeyD)))))
                .addGap(18, 18, 18)
                .addGroup(DeletePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserD)
                    .addComponent(DeleteUserD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DeletePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeletePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PasswordD))
                .addGap(18, 18, 18)
                .addComponent(DeleteD)
                .addContainerGap(297, Short.MAX_VALUE))
        );

        MainPanel.add(DeletePage, "card4");

        javax.swing.GroupLayout MusicLayout = new javax.swing.GroupLayout(Music);
        Music.setLayout(MusicLayout);
        MusicLayout.setHorizontalGroup(
            MusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 625, Short.MAX_VALUE)
        );
        MusicLayout.setVerticalGroup(
            MusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 553, Short.MAX_VALUE)
        );

        MainPanel.add(Music, "card6");

        MessageM.setText(" ");

        Select.setText("Select");
        Select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectActionPerformed(evt);
            }
        });

        Play.setText("Play");
        Play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayActionPerformed(evt);
            }
        });

        Pause.setText("Pause");
        Pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PauseActionPerformed(evt);
            }
        });

        Resume.setText("Resume");
        Resume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResumeActionPerformed(evt);
            }
        });

        Duration.setText(" ");

        TimeCounter.setText(" ");

        jLabel1.setText("   ");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/music/spotify logo (1).png"))); // NOI18N

        javax.swing.GroupLayout MusicPanelLayout = new javax.swing.GroupLayout(MusicPanel);
        MusicPanel.setLayout(MusicPanelLayout);
        MusicPanelLayout.setHorizontalGroup(
            MusicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MusicPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
            .addGroup(MusicPanelLayout.createSequentialGroup()
                .addGroup(MusicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MusicPanelLayout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(Play)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Pause)
                        .addGap(18, 18, 18)
                        .addComponent(Resume))
                    .addGroup(MusicPanelLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(MusicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MusicPanelLayout.createSequentialGroup()
                                .addComponent(Duration, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(sliderTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TimeCounter))
                            .addComponent(MessageM, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MusicPanelLayout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(Select)))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        MusicPanelLayout.setVerticalGroup(
            MusicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MusicPanelLayout.createSequentialGroup()
                .addGroup(MusicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MusicPanelLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel1)
                        .addGap(103, 103, 103))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MusicPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addComponent(Select)
                        .addGap(78, 78, 78)))
                .addGroup(MusicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sliderTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Duration)
                    .addComponent(TimeCounter))
                .addGap(18, 18, 18)
                .addComponent(MessageM)
                .addGap(18, 18, 18)
                .addGroup(MusicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Play)
                    .addComponent(Pause)
                    .addComponent(Resume))
                .addContainerGap(239, Short.MAX_VALUE))
        );

        MainPanel.add(MusicPanel, "card7");

        getContentPane().add(MainPanel, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
        //switches the panels to the desired one (Login Page)
        MainPanel.removeAll(); 
        MainPanel.add(LoginPage);
        MainPanel.repaint(); 
        MainPanel.revalidate();
        
    }//GEN-LAST:event_LoginActionPerformed

    private void RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterActionPerformed
        //switches the panels to the desired one (Register Page)
        MainPanel.removeAll(); 
        MainPanel.add(RegisterPage);
        MainPanel.repaint(); 
        MainPanel.revalidate();
    }//GEN-LAST:event_RegisterActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        //switches the panels to the desired one (DeletePage)
        MainPanel.removeAll(); 
        MainPanel.add(DeletePage);
        MainPanel.repaint(); 
        MainPanel.revalidate();
    }//GEN-LAST:event_DeleteActionPerformed

    private void LoginLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginLActionPerformed
 //gets the user's input
 String userID = LoginUserField.getText();
 String password = String.valueOf(LoginPasswordField.getPassword());
 IDandPasswords IDandpasswords = new IDandPasswords();
 
 try{
     if (IDandPasswords.get(userID).equals(userID)&&IDandPasswords.checkkey(userID)) {
    //confirms the login info matches up
    messageLabel.setForeground(Color.green);
    messageLabel.setText("Login successful");
    MainPanel.removeAll(); 
        MainPanel.add(MusicPanel);
        MainPanel.repaint(); 
        MainPanel.revalidate();
    //prints set green text when successful    
  } else {
    messageLabel.setForeground(Color.red);
    messageLabel.setText("Error Try Again");
    //when the password does not line up set it red and print wrong password on the label
  }

 }catch(Exception e){
     System.err.println(e);
 }
         
    }//GEN-LAST:event_LoginLActionPerformed

    private void RegisterPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterPasswordActionPerformed

    }//GEN-LAST:event_RegisterPasswordActionPerformed

    private void RegisterUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterUsernameActionPerformed
        
    }//GEN-LAST:event_RegisterUsernameActionPerformed

    private void TermsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TermsActionPerformed
        MessageLabelR.setText("good boy");
    }//GEN-LAST:event_TermsActionPerformed

    private void RegisterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterRActionPerformed
        try{ 
        IDandPasswords IDandpasswords = new IDandPasswords();
      String userID = RegisterUsername.getText();
      String password = String.valueOf(RegisterPassword.getPassword());
      //getting the characters from the field an put it into a string 
      
      if (!IDandPasswords.checkkey(userID)) {
        //checking if the key already exists and also checks if the button has been pressed (the register button specifically)

        IDandpasswords.register(userID, password);
        IDandpasswords.Store();
        MessageLabelR.setText("Registeration Successful");
        MainPanel.removeAll();
        MainPanel.add(MusicPanel);
        MainPanel.repaint(); 
        MainPanel.revalidate();
        //when all goes right the label has a set text of "Registration Successful"     
      }
      
      }catch (Exception e) {
              System.err.println(e);
              }
    
    }//GEN-LAST:event_RegisterRActionPerformed

    private void DeletePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletePasswordActionPerformed
        try {
      IDandPasswords IDandpasswords = new IDandPasswords();
      String userID = DeleteUserD.getText();
      //getting the text from the text field and putting that into a string
      if (IDandPasswords.checkkey(userID));
      {
        IDandpasswords.delete(userID);
        IDandPasswords.remove(userID);
        //deletes it
        messageLabel.setText("Successful");
        //prints successful when done
        
        
      }
    } catch (Exception E) {
    System.err.println(E);
    }
    }//GEN-LAST:event_DeletePasswordActionPerformed

    private void BackLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackLActionPerformed
//A back button that goes back to the welcome page
        MainPanel.removeAll(); 
        MainPanel.add(WelcomePage);
        MainPanel.repaint(); 
        MainPanel.revalidate();
    }//GEN-LAST:event_BackLActionPerformed

    private void BackDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackDActionPerformed

        MainPanel.removeAll(); 
        MainPanel.add(WelcomePage);
        MainPanel.repaint(); 
        MainPanel.revalidate();
    }//GEN-LAST:event_BackDActionPerformed

    private void BackRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackRActionPerformed
        MainPanel.removeAll(); 
        MainPanel.add(WelcomePage);
        MainPanel.repaint(); 
        MainPanel.revalidate();
    }//GEN-LAST:event_BackRActionPerformed

    private void ResumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResumeActionPerformed
//an if statement describing: if it's paused, pause it. otherwise resume playing
        if (!isPause) 
{
    pausePlaying();
	}
else
{
resumePlaying();
				}
    }//GEN-LAST:event_ResumeActionPerformed

    private void PlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayActionPerformed
   //if it isn't playing play it
    if (!isPlaying) {
    playBack();
    }
    }//GEN-LAST:event_PlayActionPerformed

    private void SelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectActionPerformed
        //open the file with the jslider
        openFile();
    
                    }//GEN-LAST:event_SelectActionPerformed

    private void PauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PauseActionPerformed
        //stops playing when the pause button is pressed    
        stopPlaying();
    }//GEN-LAST:event_PauseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Player().setVisible(true);
            }
        });
    }
    private void openFile() {
        //A method waiting for the select button to be pressed, where it prompts the user to pick a .wav file from the Jfilechooser
		javax.swing.JFileChooser fileChooser = null;
		if (lastOpenPath != null && !lastOpenPath.equals("")) {
			fileChooser = new JFileChooser(lastOpenPath);
		} else {
			fileChooser = new JFileChooser();
		}
		
		FileFilter wavFilter = new FileFilter() {
			@Override
			public String getDescription() {
				return "Sound file (*.WAV)";
			}

			@Override
			public boolean accept(File file) {
				if (file.isDirectory()) {
					return true;
				} else {
					return file.getName().toLowerCase().endsWith(".wav");
				}
			}
		};

		
		fileChooser.setFileFilter(wavFilter);
		fileChooser.setDialogTitle("Open Audio File");
		fileChooser.setAcceptAllFileFilterUsed(false);

		int userChoice = fileChooser.showOpenDialog(this);
		if (userChoice == JFileChooser.APPROVE_OPTION) {
			audioFilePath = fileChooser.getSelectedFile().getAbsolutePath();
			lastOpenPath = fileChooser.getSelectedFile().getParent();
			if (isPlaying || isPause) {
				stopPlaying();
				while (player.getAudioClip().isRunning()) {
					try {
						Thread.sleep(100);
					} catch (InterruptedException ex) {
						ex.printStackTrace();
					}
				}
			}
			playBack();
		}
	}

	/**
	 * Start playing back the sound.
	 */
	private void playBack() {
		timer = new PlayingTimer(TimeCounter, sliderTime);
		timer.start();
		isPlaying = true;
		playbackThread = new Thread(new Runnable() {

			@Override
			public void run() {
				try {

					Play.setText("Stop");
					Play.setIcon(iconStop);
					Play.setEnabled(true);
					
					Pause.setText("Pause");
					Pause.setEnabled(true);
					
					player.load(audioFilePath);
					timer.setAudioClip(player.getAudioClip());
					MessageM.setText("Playing File: " + audioFilePath);
					sliderTime.setMaximum((int) player.getClipSecondLength());
					
					Duration.setText(player.getClipLengthString());
					player.play();
					
					resetControls();

				} catch (UnsupportedAudioFileException ex) {
					MessageM.setText("The audio format is unsupported!"); 
	
					resetControls();
					ex.printStackTrace();
				} catch (LineUnavailableException ex) {
					MessageM.setText("Could not play the audio file");
					resetControls();
					ex.printStackTrace();
				} catch (IOException ex) {
					MessageM.setText("IO error while playing audio file!");
					resetControls();
					ex.printStackTrace();
				}

			}
		});

		playbackThread.start();
	}
//methods 
	private void stopPlaying() {
            //when this method is used ispause is declared false, the buttons change text, and the music stops
		isPause = false;
		Pause.setText("Pause");
		Pause.setEnabled(false);
		timer.reset();
		timer.interrupt();
		player.stop();
		playbackThread.interrupt();
	}
	
	private void pausePlaying() {
            //when this method is used the button changes text, the timer is paused, the player is paused and ispause is set to true
		Pause.setText("Resume");
		isPause = true;
		player.pause();
		timer.pauseTimer();
		playbackThread.interrupt();
	}
	
	private void resumePlaying() {
            //when this method is used the button changes texts and ispause is declard false, the timer gets resumed and the player gets resumed
		Pause.setText("Pause");
		isPause = false;
		player.resume();
		timer.resumeTimer();
		playbackThread.interrupt();		
	}
	
	private void resetControls() {
            //when the method is used the timer resets, the icon and text of the button change, and isplaying is set false
		timer.reset();
		timer.interrupt();

		Play.setText("Play");
		Play.setIcon(iconPause);
                
		
		Pause.setEnabled(false);
		
		isPlaying = false;		
	}
 
        //variables declaration for the code above
   private AudioPlayer player = new AudioPlayer();
	private Thread playbackThread;
	private PlayingTimer timer;

	private boolean isPlaying = false;
	private boolean isPause = false;
	
	private String audioFilePath;
	private String lastOpenPath;
        private ImageIcon iconOpen = new ImageIcon(getClass().getResource(
			"Open.png"));
	private ImageIcon iconPlay = new ImageIcon(getClass().getResource(
			"Play.gif"));
	private ImageIcon iconStop = new ImageIcon(getClass().getResource(
			"Stop.gif"));
	private ImageIcon iconPause = new ImageIcon(getClass().getResource(
			"Pause.png"));
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Adin;
    private javax.swing.JLabel AdinL;
    private javax.swing.JButton BackD;
    private javax.swing.JButton BackL;
    private javax.swing.JButton BackR;
    private javax.swing.JButton Delete;
    private javax.swing.JButton DeleteD;
    private javax.swing.JPanel DeletePage;
    private javax.swing.JPasswordField DeletePassword;
    private javax.swing.JTextField DeleteUserD;
    private javax.swing.JLabel Duration;
    private javax.swing.JButton Login;
    private javax.swing.JButton LoginL;
    private javax.swing.JPanel LoginPage;
    private javax.swing.JPasswordField LoginPasswordField;
    private javax.swing.JTextField LoginUserField;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel Logo2;
    private javax.swing.JLabel LogoD;
    private javax.swing.JLabel LogoL;
    private javax.swing.JLabel LogoR;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JLabel Message;
    private javax.swing.JLabel MessageD;
    private javax.swing.JLabel MessageL;
    private javax.swing.JLabel MessageLabelR;
    private javax.swing.JLabel MessageM;
    private javax.swing.JLabel MessageR;
    private javax.swing.JLabel MonkeyD;
    private javax.swing.JPanel Music;
    private javax.swing.JPanel MusicPanel;
    private javax.swing.JLabel PasswordD;
    private javax.swing.JLabel PasswordL;
    private javax.swing.JLabel PasswordR;
    private javax.swing.JButton Pause;
    private javax.swing.JButton Play;
    private javax.swing.JButton Register;
    private javax.swing.JPanel RegisterPage;
    private javax.swing.JPasswordField RegisterPassword;
    private javax.swing.JButton RegisterR;
    private javax.swing.JTextField RegisterUsername;
    private javax.swing.JButton Resume;
    private javax.swing.JButton Select;
    private javax.swing.JCheckBox Terms;
    private javax.swing.JLabel TimeCounter;
    private javax.swing.JLabel UserD;
    private javax.swing.JLabel UserL;
    private javax.swing.JLabel UserR;
    private javax.swing.JPanel WelcomePage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JSlider sliderTime;
    // End of variables declaration//GEN-END:variables
}
